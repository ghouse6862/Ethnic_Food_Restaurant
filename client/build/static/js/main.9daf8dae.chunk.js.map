{"version":3,"sources":["components/Slides/Slide1.jpeg","components/Slides/Slide2.jpg","components/Slides/Slide3.jpg","actions/index.js","components/LogIn.js","components/SignUp.js","components/ProductForm.js","components/MyCart.js","components/AppNavbar.js","components/SlideDiv.js","components/EditForm.js","components/MenuItem.js","components/MenuPagination.js","components/Menu.js","components/MyOrders.js","components/About.js","components/Contact.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/orderReducer.js","reducers/index.js","index.js"],"names":["module","exports","setError","dispatch","msg","status","id","type","payload","getProducts","category","minPrice","maxPrice","searchTerm","skip","query","axios","get","then","res","data","catch","err","response","message","getOrders","token","headers","getConfig","header","contentType","config","LogIn","error","useSelector","state","isAuthenticated","auth","useDispatch","useState","isOpen","setIsOpen","toggle","setMsg","email","setEmail","password","setPassword","useEffect","onSubmit","e","preventDefault","trim","post","signInUser","NavLink","onClick","href","Modal","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","name","placeholder","onChange","target","value","Button","block","style","marginTop","SignUp","setName","phnno","setPhnno","match","length","signUpUser","ProductForm","added","product","search","price","setPrice","qty","setQty","setCategory","description","setDescription","image","setImage","parseFloat","productName","file","fd","FormData","append","addProduct","selected","accept","files","required","FormText","MyCart","cart","user","orderType","document","getElementsByName","i","checked","placeOrder","placed","items","Fragment","Table","striped","map","index","scope","toFixed","incStyle","_id","total","decStyle","filter","tag","check","backgroundColor","border","padding","cursor","marginRight","AppNavbar","order","localStorage","getItem","redirect","setRedirect","a","to","Navbar","light","expand","NavbarBrand","src","NavbarToggler","Collapse","navbar","Nav","className","NavItem","isAdmin","logoutUser","slide1","altText","caption","slide2","slide3","SlideDiv","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","slides","item","CarouselItem","onExiting","onExited","key","alt","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","EditForm","edited","setId","toString","put","details","editProduct","btnStyle","toLowerCase","MenuItem","cards","setCards","delete","deleteProduct","addToCart","isPresent","interimItems","push","interimTotal","interim","result","Row","Col","sm","Card","inverse","borderColor","CardImg","top","width","CardBody","CardTitle","CardSubtitle","CardText","CardLink","CardFooter","MenuPagination","move","pagination","setPagination","list","Math","ceil","float","margin","Menu","setMinPrice","setMaxPrice","setSearch","inline","page","MyOrders","loc","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","Date","bookingTime","totalBill","About","marginBottom","Contact","marginLeft","App","loadUser","exact","path","render","Boolean","window","location","hostname","initialState","errorReducer","action","productReducer","allReducers","combineReducers","setItem","removeItem","persistConfig","storage","persistedReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","loading","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.9daf8dae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Slide1.3148ef7c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Slide2.412cbf82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Slide3.2f4c64a4.jpg\";","import axios from 'axios';\n\n\nexport const limit = 4;\n\nexport const setError = (dispatch, msg, status, id) => {\n    dispatch({\n        type : 'SET_ERROR',\n        payload : {\n            msg,\n            status,\n            id\n        }\n    });\n}\n\nexport const signUpUser = (dispatch, name, email, phnno, password) => {\n\n    axios.post('/user/register',{name, email, phnno, password})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type: 'REGISTRATION_SUCCESS',\n                payload: { ...res.data,\n                    token : res.headers['auth-token']\n                }\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'REGISTRATION_FAILURE');\n            dispatch({\n                type: 'REGISTRATION_FAILURE'\n            });\n        })\n}\n\nexport const signInUser = (dispatch, email, password) => {\n\n    axios.post('/user/login',{email, password})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type: 'LOGIN_SUCCESS',\n                payload: { ...res.data,\n                    token : res.headers['auth-token']\n                }\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'LOGIN_FAILURE');\n            dispatch({\n                type: 'LOGIN_FAILURE'\n            });\n        })\n}\n\nexport const logoutUser = (dispatch, id, token) => {\n\n    const headers = getConfig(token).header;\n\n    axios.post('/user/logout', {id}, { headers : headers })\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'LOGOUT_SUCCESS'\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'LOGOUT_FAILURE');\n            dispatch({\n                type : 'LOGOUT_FAILURE'\n            });\n        })\n}\n\nexport const loadUser = (dispatch, token) => {\n\n    const headers = getConfig(token).header;\n\n    axios.get('/user', {headers : headers})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'USER_LOADED',\n                payload : {\n                    ...res.data,\n                    token : token\n                }\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'AUTH_FAILURE');\n            dispatch({\n                type : 'AUTH_FAILURE'\n            });\n\n        })\n}\n\nexport const addProduct = (dispatch, token, productName, description, price, qty, category, file) => {\n\n    let fd = new FormData();\n    fd.append('productName', productName);\n    fd.append('description', description);\n    fd.append('price', price);\n    fd.append('qty', qty);\n    fd.append('category', category);\n    fd.append('images', file, file.name);\n\n    axios.post('/products/add', fd, {headers : getConfig(token,'multipart/form-data').header})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'ITEM_ADDED'\n            });\n        })\n        .catch(err => {\n            \n            setError(dispatch, err.response.data.message, err.response.status, 'ITEM_ADD_FAILURE');\n        })\n}\n\nexport const editProduct = (dispatch, token, productName, description, price, qty, category, file, id) => {\n\n    let fd = new FormData();\n        fd.append('productName', productName);\n        fd.append('description', description);\n        fd.append('price', price);\n        fd.append('qty', qty);\n        fd.append('category', category);\n\n    if(file) {\n        fd.append('images', file, file.name); \n    }\n\n    axios.put(`/products/${id}`, fd, {headers : getConfig(token,'multipart/form-data').header})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'ITEM_EDITED',\n                payload : {id, details : {productName, description, price, qty, category}}\n            });\n        })\n        .catch(err => {\n            \n            setError(dispatch, err.response.data.message, err.response.status, 'ITEM_EDIT_FAILURE');\n        })\n\n}\n\nexport const deleteProduct = (dispatch, id, token) => {\n    \n    axios.delete(`/products/${id}`, {headers: getConfig(token).header})\n        .then(res => {\n            \n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n\n            dispatch({\n                type : 'ITEM_DELETED',\n                payload : id\n            })\n        })\n        .catch(err => {\n\n            setError(dispatch, err.response.data.message, err.response.status, 'ITEM_DELETE_FAILURE');\n        })\n}\n\nexport const getProducts = (dispatch, category, minPrice, maxPrice, searchTerm, skip=0) => {\n    let query = '/products/?category=';\n\n    if(category) {\n        query += category;\n    }\n    query += '&minprice='\n    if(minPrice) {\n        query += minPrice;\n    }\n    query += '&maxprice='\n    if(maxPrice) {\n        query += maxPrice;\n    }\n    query += '&searchTerm='\n    if(searchTerm) {\n        query += searchTerm;\n    }\n    query += '&limit='+limit+'&skip='+skip;\n    //request for data\n    axios.get(query)\n        .then(res => { dispatch({\n            type : 'GET_ITEMS',\n            payload : res.data\n            });\n            dispatch({\n                type: 'SET_SEARCH_FIELDS',\n                payload: {category, minPrice, maxPrice, searchTerm, skip}\n            }); \n        })\n        .catch(err => setError(dispatch, err.response.data.message, err.response.status, 'ITEMS_FETCH_FAILURE'))\n}\n\nexport const placeOrder = (dispatch, cart, user, orderType, token) => {\n\n    axios.post('/orders/add', {cart, user, orderType}, {headers: getConfig(token).header})\n        .then(res => {\n                \n        dispatch({\n            type : 'CLEAR_ERROR'\n        })\n\n        dispatch({\n            type : 'ORDER_PLACED' \n        })\n\n        })\n        .catch(err => setError(dispatch, err.response.data.message, err.response.status, 'ORDER_FAILURE'))\n}\n\nexport const getOrders = (dispatch, token) => {\n   \n    axios.get('/orders', {headers: getConfig(token).header})\n        .then(res => {\n            \n            dispatch({\n                type : 'CLEAR_ERROR'\n            })\n\n            dispatch({\n                type : 'GET_ORDERS',\n                payload : res.data\n            })\n            \n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'ORDER_FAILURE');\n        })\n}\n\nexport const getConfig = (token, contentType='application/json') => {\n    const config = {\n        header : {\n            'Content-Type' : contentType\n        }\n    }\n    if(token) {\n        config.header['auth-token'] = token;\n    }\n    return config;\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n } from 'reactstrap';\n import { signInUser, setError } from '../actions';\n\nexport default function LogIn() {\n\n    const error = useSelector(state => state.error);\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => { \n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setIsOpen(!isOpen);\n    }\n\n    const [msg, setMsg] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect( () => {\n        if(error.id === 'LOGIN_FAILURE') {\n            setMsg(error.msg);\n        }\n        if(isAuthenticated) {\n            if(isOpen) {\n                toggle();\n            }\n        }\n    }, [error, isAuthenticated] )\n\n    const onSubmit = e => { \n        e.preventDefault();\n        //perform validation\n        if(!email.trim() || !password.trim()) {\n\n            setError(dispatch, \"All fields are required\", 400, 'LOGIN_FAILURE');\n        } else {\n            signInUser(dispatch, email, password);\n        } \n    }    \n\n    return (\n        <div>\n            <NavLink onClick={toggle} href=\"#\">SignIn</NavLink>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>SignIn: </ModalHeader>\n                <ModalBody>\n                    {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    <Form onSubmit = { e => onSubmit(e) }>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input name=\"email\"\n                                id=\"email\"\n                                type=\"email\"\n                                placeholder=\"enter email id\"\n                                onChange={ e => setEmail(e.target.value) } \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input name=\"password\"\n                                id=\"password\"\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                onChange={ e => setPassword(e.target.value) } \n                            />\n                        </FormGroup>\n                        <Button\n                            color=\"dark\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >SignIn</Button>\n                        </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n } from 'reactstrap';\nimport { signUpUser, setError } from '../actions';\n\n\nexport default function SignUp() {\n\n    const error = useSelector(state => state.error);\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => {\n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setIsOpen(!isOpen);\n    };\n\n    const [msg, setMsg] = useState(null);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phnno, setPhnno] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect( () => {\n        if(error.id === 'REGISTRATION_FAILURE') {\n            setMsg(error.msg);\n        }\n        if(isAuthenticated) {\n            if(isOpen) {\n                toggle();\n            }\n        }\n    }, [error, isAuthenticated] )\n\n    const onSubmit = e => { \n        e.preventDefault();\n        //perform validation\n        if(!name.trim() || !email.trim() || !phnno.trim() || !password.trim()) {\n\n            setError(dispatch, \"All fields are required\", 400, 'REGISTRATION_FAILURE');\n        } \n        //check if password meets all requirements\n        else if(!password.trim().match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)) {\n\n            const message = \"Password should be minimum of 8 characters & should include atleast 1 lowercase, 1 uppercase, 1 digit & 1 special character\";\n            setError(dispatch, message, 400, 'REGISTRATION_FAILURE');\n        }\n        //check if phone number meets all requirements \n        else if(!phnno.trim().match(/^[0-9]*$/) || !(phnno.trim().length === 10)) {\n\n            setError(dispatch ,\"please enter a valid phone number\", 400, 'REGISTRATION_FAILURE');\n        }\n        //check if name meets all requirements \n        else if(!name.trim().match(/^[a-zA-Z\\s]*$/)) {\n\n            setError(dispatch, \"Name should contain only letters\", 400, 'REGISTRATION_FAILURE');\n        }\n        else if(name.trim().length < 3) {\n\n            setError(dispatch, \"Name should contain atleast 3 characters\", 400, 'REGISTRATION_FAILURE');\n        }\n        //if all fields are valid\n        else {\n            signUpUser(dispatch, name.trim(), email.trim(), phnno.trim(), password.trim());\n        }\n    }\n\n    return (\n        <div>\n            <NavLink onClick={toggle} href=\"#\">SignUp</NavLink>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>SignUp: </ModalHeader>\n                <ModalBody>\n                    {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    <Form onSubmit = { e => onSubmit(e) }>\n                        <FormGroup>\n                            <Label for=\"name\">Name:</Label>\n                            <Input name=\"name\"\n                                id=\"name\"\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                onChange={ e => setName(e.target.value) } \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input name=\"email\"\n                                id=\"email\"\n                                type=\"email\"\n                                placeholder=\"enter your email id\"\n                                onChange={ e => setEmail(e.target.value) }  \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"phnno\">Phone Number:</Label>\n                            <Input name=\"phnno\"\n                                id=\"phnno\"\n                                type=\"text\"\n                                placeholder=\"enter your phone number\"\n                                onChange={ e => setPhnno(e.target.value) }  \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input name=\"password\"\n                                id=\"password\"\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                onChange={ e => setPassword(e.target.value) }  \n                            />\n                        </FormGroup>\n                        <Button\n                            color=\"dark\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >SignUp</Button>\n                        </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\n\n//export default connect(null, toggle)(MyComponent);","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert, Modal,\n    ModalHeader,\n    ModalBody,\n    NavLink } from 'reactstrap';\nimport { addProduct, setError, getProducts } from '../actions';\n\n\nexport default function ProductForm() {\n\n    const error = useSelector(state => state.error);\n    const token = useSelector(state => state.auth.token);\n    const added = useSelector(state => state.product.added);\n    const skip = useSelector(state => state.product.skip);\n    const search = useSelector(state => state.product.search);\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const toggle = () => { \n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setIsOpen(!isOpen);\n    }\n\n    const [msg, setMsg] = useState(null);\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(null);\n    const [qty, setQty] = useState(null);\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState(null);\n\n    useEffect( () => {\n        if(error.id === 'ITEM_ADD_FAILURE') {\n            setMsg(error.msg);\n        }\n        \n        if(error.status === null && added) {\n            if(isOpen) {\n                toggle();\n                dispatch({\n                    type : 'RESET'\n                })\n                if(search) {\n                    getProducts(dispatch, search.category, search.minPrice, search.maxPrice, search.searchTerm, skip);\n                }\n            }\n        }\n    }, [error, added] )\n\n    const onSubmit = e => {\n\n        e.preventDefault();\n\n        if(!name.trim() || !description.trim() || !price.trim() || !category.trim() || !image || !qty.trim()) {\n            setError(dispatch, \"All fields are required\", 400, 'ITEM_ADD_FAILURE');\n\n        }\n        else if(name.trim().length < 3) {\n            setError(dispatch, \"Name should contain atleast 3 characters!\", 400, 'ITEM_ADD_FAILURE');\n\n        }\n        else if(parseFloat(price) < 0) {\n            setError(dispatch, \"Price should be a positive Number\", 400, 'ITEM_ADD_FAILURE');\n            \n        }\n        else if(parseFloat(qty) < 0) {\n            setError(dispatch, \"Quantity Available cannot be negative\", 400, 'ITEM_ADD_FAILURE');\n        }\n        else if(description.trim().length < 10) {\n            setError(dispatch, \"Description should contain atleast 10 characters\", 400, 'ITEM_ADD_FAILURE');\n            \n        } \n        else if(description.trim().length > 150) {\n            setError(dispatch, \"Description can contain atmost 150 characters\", 400, 'ITEM_ADD_FAILURE');\n            \n        } else {\n            addProduct(dispatch, token, name.trim(), description.trim(), parseFloat(price), parseFloat(qty), category.trim(), image);\n        }\n    }\n\n    return (\n        <div>\n           <NavLink onClick={toggle} href=\"#\">Add Product</NavLink> \n           <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Enter Details of the Item to Add: </ModalHeader>\n                <ModalBody>\n                { msg ? <Alert color=\"danger\">{msg}</Alert> : null }\n           <Form onSubmit = { e => onSubmit(e) }>\n                <FormGroup>\n                    <Label for=\"productName\">Name: </Label>\n                    <Input type=\"text\" \n                        name=\"productName\" \n                        id=\"productName\" \n                        placeholder=\"Enter the name of the item\"\n                        onChange={ e => setName(e.target.value) } \n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"price\">Price: </Label>\n                    <Input type=\"text\" \n                        name=\"price\" \n                        id=\"price\" \n                        placeholder=\"Enter price for the item\" \n                        onChange={ e => setPrice(e.target.value) }\n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"qty\">Quantity Available: </Label>\n                    <Input type=\"text\" \n                        name=\"qty\" \n                        id=\"qty\" \n                        placeholder=\"Enter quantity of item available\" \n                        onChange={ e => setQty(e.target.value) }\n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"Category\">Category: </Label>\n                    <Input type=\"select\" name=\"Category\" id=\"Category\" onChange={ e => setCategory(e.target.value) }>\n                        <option value=\"\" selected>choose</option>\n                        <option value=\"starters\">starters</option>\n                        <option value=\"curries\">curries</option>\n                        <option value=\"rice\">rice</option>\n                    </Input>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"decription\">Item Description: </Label>\n                    <Input type=\"textarea\" \n                        name=\"description\" \n                        id=\"description\" \n                        placeholder=\"text\"\n                        onChange={ e => setDescription(e.target.value) }\n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"image\">Item Image: </Label>\n                    <Input type=\"file\" \n                        name=\"image\" \n                        id=\"image\"\n                        accept=\"image/png, image/jpeg, image/jpg\" \n                        onChange={ e => setImage(e.target.files[0])} required/>\n                    <FormText color=\"danger\">\n                    Upload only .png, .jpeg or .jpg file types.\n                    </FormText>\n                </FormGroup>\n                <Button color=\"dark\">Submit</Button>\n            </Form>\n            </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink, Button, Form, FormGroup, Label, Input,\n    Modal, ModalHeader, ModalBody, Alert,\n    Table } from \"reactstrap\";\nimport { placeOrder, setError } from \"../actions\";\n\nexport default function MyCart() {\n\n    const cart = useSelector(state => state.cart);\n    const user = useSelector(state => state.auth.user);\n    const token = useSelector(state => state.auth.token);\n    const error = useSelector(state => state.error);\n    const dispatch = useDispatch();\n\n    const [msg, setMsg] = useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => { \n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setMsg(null);\n        setIsOpen(!isOpen);\n    }\n\n    const onClick = () => {\n\n        let type = document.getElementsByName('radio');\n        let orderType;\n\n        for(let i = 0; i < type.length; i++) {\n            if(type[i].checked) {\n                orderType = type[i].value;\n            }\n        }\n\n        if(!orderType) {\n            setError(dispatch, 'OrderType is Required',400,'ORDER_FAILURE');\n        } else {\n            placeOrder(dispatch, cart, user, orderType, token);\n        }\n    }\n\n    const emptyCart = () => {\n        dispatch({\n            type : 'ORDER_RESET'\n        })\n    }\n\n    const increaseQty = (id) => {\n        \n        cart.items = cart.items.map(product => {\n            if(product._id === id) {\n                product.qty += 1;\n                cart.total = (parseFloat(cart.total)+parseFloat(product.price)).toFixed(2);                \n            }\n            return product;\n        })\n\n        dispatch({\n            type : 'ADD_TO_CART',\n            payload : {\n                items : cart.items,\n                total : cart.total,\n            }\n        })\n    }\n\n    const decreaseQty = (id) => {\n\n        cart.items = cart.items.map(product => {\n            if(product._id === id) {\n                product.qty -= 1;\n                cart.total = (parseFloat(cart.total)-parseFloat(product.price)).toFixed(2);\n            }\n            return product;\n        })\n\n        cart.items = cart.items.filter(product => product.qty !== 0);\n\n        dispatch({\n            type : 'ADD_TO_CART',\n            payload : {\n                items : cart.items,\n                total : cart.total,\n            }\n        })\n    }\n\n    useEffect(() => {\n        if(error.id === 'ORDER_FAILURE') {\n            setMsg(error.msg);\n        }\n        if(error.status == null && cart.placed) {\n            dispatch({\n                type : 'ORDER_RESET'\n            })\n            setMsg(\"Success! Your Order has been placed & will be ready in 1 hour.\");\n        }\n    }, [error, cart])\n\n    return (\n        <div>\n           <NavLink onClick={toggle} href=\"#\">My Cart</NavLink> \n           <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Your Cart: </ModalHeader>\n                <ModalBody>\n\n                    {msg && error.id === 'ORDER_FAILURE' ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    {msg && error.status == null ? <Alert color=\"success\">{msg}</Alert> : null}\n\n                    {cart.items.length > 0 ?\n                    <React.Fragment>\n                    <Table striped>\n                        <thead>\n                            <tr>\n                            <th>Item No</th>\n                            <th>Item Name</th>\n                            <th>quantity</th>\n                            <th>Price</th>\n                            <th>Update Qty</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {cart.items.map((product, index) => (\n                            <tr>\n                                <th scope=\"row\">{index}</th>\n                                <td>{product.productName}</td>\n                                <td>{product.qty}</td>\n                                <td>{(product.price * product.qty).toFixed(2)}</td>\n                                <td><button style={incStyle} onClick = {() => increaseQty(product._id)}>+</button>\n                                    <button style={decStyle} onClick = {() => decreaseQty(product._id)}>-</button></td>\n                            </tr>\n                        ))\n                    }\n                    <tr>\n                        <th scope=\"row\"></th>\n                        <td></td>\n                        <th>Total</th>\n                        <td>{cart.total}</td>\n                    </tr>\n                    </tbody>\n                    </Table>\n                        <Form>\n                            <FormGroup tag=\"fieldset\">\n                            <legend>Order Type: </legend>\n                            <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio\" value=\"dinein\"/>{' '}\n                                Dine-in\n                            </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio\" value=\"pickup\"/>{' '}\n                                Pick-up\n                            </Label>\n                            </FormGroup>\n                            </FormGroup>\n                        </Form>\n                        <Button\n                            onClick = {() => onClick()}\n                            color=\"success\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >Place Order</Button>\n                        <Button\n                            onClick = {() => emptyCart()}\n                            color=\"danger\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >Empty Cart</Button>    \n                    </React.Fragment>\n                    :\n                    <h4>Nothing to show!</h4>}\n                </ModalBody>\n           </Modal>\n        </div>\n    )\n}\n\nconst incStyle = {\n    color : 'white',\n    backgroundColor : '#4fa846',\n    border : 'none',\n    padding: '4px 7px',\n    cursor : 'pointer',\n    marginRight : '5px'\n}\n\nconst decStyle = {\n    color : 'white',\n    backgroundColor : '#dc4245',\n    border : 'none',\n    padding: '4px 7px',\n    cursor : 'pointer'\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport LogIn from './LogIn';\nimport SignUp from './SignUp';\nimport ProductForm from './ProductForm';\nimport MyCart from \"./MyCart\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\nimport { logoutUser, getOrders } from '../actions';\n\n\nconst AppNavbar = () => { //(props) was removed\n\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const user = useSelector(state => state.auth.user);\n    const order = useSelector(state => state.order);\n    //const token = useSelector(state => state.auth.token);\n    const token = localStorage.getItem('token');\n\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    const onClick = async () => {\n\n        getOrders(dispatch, token);\n        setRedirect(true);\n        \n    }\n    \n    return (\n        <div>\n            {redirect ? <Redirect to='/Orders'></Redirect> : null} \n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/\"><img src=\"TajLogo.png\"></img></NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <NavLink href=\"/\">Home</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"#About\">About</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/Menu\">Menu</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"#Contact\">Contact</NavLink>\n                    </NavItem>\n                </Nav>\n            { ((token && isAuthenticated === null) || (isAuthenticated)) ?\n            <Nav navbar>\n        \n            {user ? user.isAdmin ? \n            <NavItem>\n            <ProductForm />\n            </NavItem> \n            :\n            <React.Fragment>\n            <NavItem>\n            <MyCart /> \n            </NavItem>\n            <NavItem>\n                <NavLink onClick = {() => onClick()} href=\"#\">My Orders</NavLink>\n            </NavItem>\n            </React.Fragment>  \n            : \n            null\n            }    \n            <NavItem>\n                <NavLink onClick = {() => logoutUser(dispatch, user._id, token)} href=\"#\">LogOut</NavLink>\n            </NavItem>\n            </Nav>     \n            :\n            <Nav navbar>\n                <NavItem>\n                    <SignUp />\n                </NavItem>\n                <NavItem>\n                    <LogIn />\n                </NavItem>\n            </Nav> }\n        </Collapse>\n      </Navbar>\n    </div>\n    )\n}\n\nexport default AppNavbar;\n\n","import React, { useState } from 'react'\nimport {\n    Carousel,\n    CarouselItem,\n    CarouselControl,\n    CarouselIndicators,\n    CarouselCaption\n  } from 'reactstrap';\nimport slide1 from './Slides/Slide1.jpeg';\nimport slide2 from './Slides/Slide2.jpg';  \nimport slide3 from './Slides/Slide3.jpg';    \n\nconst items = [\n    {\n        src: slide1,  \n        altText: 'Slide 1',\n        caption: 'Slide 1'\n    },\n    {\n        src: slide2, \n        altText: 'Slide 2',\n        caption: 'Slide 2'\n    },\n    {\n        src: slide3, \n        altText: 'Slide 3',\n        caption: 'Slide 3'\n    }\n];\n\nexport default function SlideDiv() {\n\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n      className=\"mb-5\"\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert, Modal,\n    ModalHeader,\n    ModalBody } from \"reactstrap\";\nimport { editProduct, getProducts, setError } from '../actions';\n\n\nexport default function EditForm({item}) {\n\n    const error = useSelector(state => state.error);\n    const token = useSelector(state => state.auth.token);\n    const edited = useSelector(state => state.product.edited);\n    //const skip = useSelector(state => state.product.skip);\n    //const search = useSelector(state => state.product.search);\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const toggle = () => { \n        dispatch({\n            type : 'CLEAR_ERROR'\n        }); \n        setIsOpen(!isOpen);\n    }\n\n    const [msg, setMsg] = useState(null);\n    const [id, setId] = useState(item._id);\n    const [name, setName] = useState(item.productName);\n    const [price, setPrice] = useState(item.price.toString());\n    const [qty, setQty] = useState(item.qty.toString());\n    const [category, setCategory] = useState(item.category);\n    const [description, setDescription] = useState(item.description);\n    const [image, setImage] = useState(null);\n\n    useEffect( () => {\n\n        setId(item._id);\n        setName(item.productName);\n        setPrice(item.price.toString());\n        setQty(item.qty.toString());\n        setCategory(item.category);\n        setDescription(item.description);\n        \n        if(error.id === 'ITEM_EDIT_FAILURE') {\n            setMsg(error.msg);\n        }\n        if(error.status === null && edited) {\n            if(isOpen) {\n                toggle();\n                dispatch({\n                    type : 'RESET'\n                })\n            }\n        }\n    }, [error, edited, item] )\n\n    const onSubmit = e => {\n\n        e.preventDefault();\n\n        if(!name.trim() || !description.trim() || !price.trim() || !category.trim() || !qty.trim()) {\n            setError(dispatch, \"All fields are required\", 400, 'ITEM_EDIT_FAILURE');\n\n        }\n        else if(name.trim().length < 3) {\n            setError(dispatch, \"Name should contain atleast 3 characters!\", 400, 'ITEM_EDIT_FAILURE');\n\n        }\n        else if(parseFloat(price) < 0) {\n            setError(dispatch, \"Price should be a positive Number\", 400, 'ITEM_EDIT_FAILURE');\n            \n        }\n        else if(parseFloat(qty) < 0) {\n            setError(dispatch, \"Quantity Available cannot be a negative number\", 400, 'ITEM_EDIT_FAILURE');\n            \n        }\n        else if(description.trim().length < 10) {\n            \n            setError(dispatch, \"Description should contain atleast 10 characters\", 400, 'ITEM_EDIT_FAILURE');\n            \n        } \n        else if(description.trim().length > 150) {\n            setError(dispatch, \"Description can contain atmost 150 characters\", 400, 'ITEM_EDIT_FAILURE');\n            \n        } else {\n            editProduct(dispatch, token, name.trim(), description.trim(), parseFloat(price), parseFloat(qty), category.trim(), image, id);\n        }\n    }\n\n\n    return (\n        <div>\n            <Button style={btnStyle} onClick={toggle}>Edit</Button>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Edit Details of the Item: </ModalHeader>\n                <ModalBody>\n                    { msg ? <Alert color=\"danger\">{msg}</Alert> : null }\n                    <Form onSubmit = { e => onSubmit(e) }>\n                        <FormGroup>\n                        <Label for=\"productName\">Name: </Label>\n                        <Input type=\"text\" \n                            name=\"productName\" \n                            id=\"productName\" \n                            placeholder=\"Enter the name of the item\"\n                            value={name}\n                            onChange={ e => setName(e.target.value)}\n                 \n                        />\n                        </FormGroup>\n                        <FormGroup>\n                        <Label for=\"qty\">Quantity Available: </Label>\n                        <Input type=\"text\" \n                        name=\"qty\" \n                        id=\"qty\" \n                        placeholder=\"Enter quantity of item available\"\n                        value={qty}\n                        onChange={ e => setQty(e.target.value) } \n                        \n                        />\n                        </FormGroup>\n                        <FormGroup>\n                        <Label for=\"price\">Price: </Label>\n                        <Input type=\"text\" \n                        name=\"price\" \n                        id=\"price\" \n                        placeholder=\"Enter price for the item\"\n                        value={price}\n                        onChange={ e => setPrice(e.target.value) } \n                        \n                        />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"Category\">Category: </Label>\n                            <Input type=\"select\" \n                                name=\"Category\" \n                                id=\"Category\" \n                                value={category}\n                                onChange={ e => setCategory(e.target.value) }>\n                                <option value=\"\">choose</option>\n                                <option value=\"starters\" selected={category.toLowerCase() === \"starters\"}>starters</option> \n                                <option value=\"curries\" selected={category.toLowerCase() === \"curries\"}>curries</option>\n                                <option value=\"rice\" selected={category.toLowerCase() === \"rice\"}>rice</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"decription\">Item Description: </Label>\n                            <Input type=\"textarea\" \n                                name=\"description\" \n                                id=\"description\"  \n                                placeholder=\"text\"\n                                value={description}\n                                onChange={ e => setDescription(e.target.value) }                            \n                                />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"image\">Item Image: </Label>\n                            <Input type=\"file\" \n                                name=\"image\" \n                                id=\"image\"\n                                accept=\"image/png, image/jpeg, image/jpg\"\n                                onChange={ e => setImage(e.target.files[0])} \n                                />\n                            <FormText color=\"danger\">\n                            Note: Only Upload a File if you want to replace the existing image. \n                            Upload only .png, .jpeg or .jpg file types. \n                            </FormText>\n                        </FormGroup>\n                        <Button color=\"dark\">Submit</Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nconst btnStyle = {\n    color : '#996515',\n    backgroundColor : '#FFDF00'\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Card, CardImg, CardText, CardBody, Col, Row, CardLink, \n    CardTitle, CardSubtitle, Button, CardFooter,\n  } from 'reactstrap';\nimport EditForm from \"./EditForm\";\nimport { deleteProduct } from \"../actions\";\n\n\nexport default function MenuItem() {\n\n    const items = useSelector(state => state.product.items);\n    const user = useSelector(state => state.auth.user);\n    const cart = useSelector(state => state.cart);\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const token = useSelector(state => state.auth.token);\n    const dispatch = useDispatch();\n\n    const [cards, setCards] = useState([]);\n\n    const onClick = id => { deleteProduct(dispatch, id, token); }\n\n    const addToCart = item => { \n\n        let isPresent = false;\n        let interimItems = [];\n\n        interimItems = cart.items.map(product => {\n            \n            if(product._id === item._id) {\n                isPresent = true;\n                product.qty += 1;\n            }\n            return product;\n        })\n\n        if(!isPresent) { interimItems.push({...item, qty : 1}); }\n        let interimTotal = (parseFloat(cart.total)+parseFloat(item.price)).toFixed(2);\n\n        dispatch({\n        type: 'ADD_TO_CART',\n        payload : { \n            items : interimItems,\n            total : interimTotal \n        }\n    })\n}\n\n    useEffect(() => {\n        if(items) {\n             \n            let interim = items.result.map((item, index) => (\n\n                index%2 === 0 ? \n\n                    index+1 < items.result.length ?\n\n                                <Row className=\"mb-2\">\n                                <Col sm=\"6\" className=\"mb-2\">  \n                                <Card inverse style={{ backgroundColor: '#99651b', borderColor: '#333'}}>\n                                <CardImg top width=\"100%\" src={\"http://localhost:5000/products/\"+item._id+\"/images\"} alt={item.productName} />\n                                <CardBody style={{color: '#FFDF00'}}>  \n                                    <CardTitle>{item.productName}</CardTitle>\n                                    <CardSubtitle>{item.category}</CardSubtitle>\n                                    <CardText>{item.description}</CardText>\n\n                                    {\n                                    isAuthenticated ? \n                                    user.isAdmin ?\n\n                                    <Row>\n                                    <CardLink><EditForm item={item}/></CardLink>\n                                    <CardLink><Button style={btnStyle} onClick = {() => onClick(item._id)} >Delete</Button></CardLink>\n                                    </Row>  \n                                    : \n                                    <Button style={btnStyle} onClick = {() => addToCart(item)}>Add to Cart</Button> \n                                    : \n                                    <CardText style={{color : \"white\"}}>Login Or SignUp to Order</CardText>\n                                    }\n                                </CardBody>\n                                    <CardFooter style={{color: '#FFDF00'}}>Price: ${item.price}</CardFooter>   \n                                </Card>\n                                </Col>\n\n                                <Col sm=\"6\" className=\"mb-2\">\n                                <Card inverse style={{ backgroundColor: '#99651b', borderColor: '#333'}}>\n                                <CardImg top width=\"100%\" src={\"http://localhost:5000/products/\"+items.result[index+1]._id+\"/images\"} alt={items.result[index+1].productName} />\n                                <CardBody style={{color: '#FFDF00'}}>\n                                    <CardTitle>{items.result[index+1].productName}</CardTitle>\n                                    <CardSubtitle>{items.result[index+1].category}</CardSubtitle>\n                                    <CardText>{items.result[index+1].description}</CardText>\n\n                                    {\n                                    isAuthenticated ? \n                                    user.isAdmin ? \n\n                                    <Row>\n                                    <CardLink><EditForm item={items.result[index+1]}/></CardLink> \n                                    <CardLink><Button style={btnStyle} onClick = {() => onClick(items.result[index+1]._id)}>Delete</Button></CardLink>\n                                    </Row>  \n                                    : \n                                    <Button style={btnStyle} onClick = {() => addToCart(items.result[index+1])}>Add to Cart</Button> \n                                    : \n                                    <CardText style={{color : \"white\"}}>Login Or SignUp to Order</CardText>\n                                    }\n                                </CardBody>\n                                    <CardFooter style={{color: '#FFDF00'}}>Price: ${items.result[index+1].price}</CardFooter>\n                                </Card> \n                                </Col>  \n                                </Row> \n                        :   \n                        <Row>\n                            <Col sm=\"6\" className=\"mb-2\">\n                            <Card inverse style={{ backgroundColor: '#99651b', borderColor: '#333'}}>\n                            <CardImg top width=\"100%\" src={\"http://localhost:5000/products/\"+item._id+\"/images\"} alt={item.productName} />\n                            <CardBody style={{color: '#FFDF00'}}>  \n                                <CardTitle>{item.productName}</CardTitle>\n                                <CardSubtitle>{item.category}</CardSubtitle>\n                                <CardText>{item.description}</CardText>\n                                {\n                                isAuthenticated ? \n                                user.isAdmin ?\n\n                                <Row>\n                                <CardLink><EditForm item={item}/></CardLink>\n                                <CardLink><Button style={btnStyle} onClick = {() => onClick(item._id)}>Delete</Button></CardLink> \n                                </Row>  \n                                : \n                                <Button style={btnStyle} onClick = {() => addToCart(item)}>Add to Cart</Button> \n                                : \n                                <CardText style={{color : \"white\"}}>Login Or SignUp to Order</CardText>}\n                            </CardBody>\n                                <CardFooter style={{color: '#FFDF00'}}>Price: ${item.price}</CardFooter>\n                            </Card>\n                            </Col>\n                            </Row>\n                :  \n                null \n            ))\n            setCards(interim);\n        }\n    }, [items, isAuthenticated, cart])\n\n    return (\n        <div>\n            {cards}   \n        </div>\n    )\n}\n\nconst btnStyle = {\n    color : '#996515',\n    backgroundColor : '#FFDF00'\n}","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { limit } from '../actions';\n\n\nexport default function MenuPagination({move}) {\n\n    const items = useSelector(state => state.product.items);\n    const [pagination, setPagination] = useState([]);\n\n    useEffect(() => {\n        if(items) {\n            let list = [];\n            for(let i = 0; i < Math.ceil(items.length/limit); i++) {\n                list.push(i+1);\n            }\n            setPagination(list);\n        }\n    }, [items])\n    \n    return ( \n        <div className=\"row\">\n        <div className=\"col-lg-1\" style={{float: \"none\", margin: \"0 auto\"}}>\n            <nav>\n                <ul className=\"pagination\">\n                    {pagination.map(i => (\n                        <li key={i} className=\"page-item\">\n                            <a onClick={() => move(i)} href=\"#\" className=\"page-link\">\n                                {i}\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport MenuItem from \"./MenuItem\";\nimport MenuPagination from \"./MenuPagination\";\nimport { getProducts, limit } from \"../actions\";\n\nexport default function Menu() {\n\n    const [category, setCategory] = useState(\"\");\n    const [minPrice, setMinPrice] = useState(null);\n    const [maxPrice, setMaxPrice] = useState(null);\n    const [search, setSearch] = useState(\"\");\n    const [msg, setMsg] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const onSubmit = e => {\n        \n        e.preventDefault();\n        setMsg(null);\n\n        if(parseFloat(minPrice) > parseFloat(maxPrice)) {\n            setMsg(\"Error! Minimum Price cannot be greater than Maximum Price\");\n        } else {\n            getProducts(dispatch, category, minPrice, maxPrice, search);\n        }\n        \n    }\n\n    const move = page => {\n\n        const skip = (page - 1 ) * limit; \n        getProducts(dispatch, category, minPrice, maxPrice, search, skip);\n    \n    }\n\n    useEffect(() => {\n        getProducts(dispatch, category, minPrice, maxPrice, search);\n    },[]) \n\n    return(\n        <div className=\"container\" style={{marginTop : \"30px\"}}>\n            {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n            <Form inline className=\"mb-5\" onSubmit = {e => onSubmit(e)}>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Label for=\"category\" className=\"mr-sm-2\">Category: </Label>\n                    <Input type=\"select\" \n                        name=\"category\" \n                        id=\"category\"\n                        onChange={ e => setCategory(e.target.value) }>\n                        <option value=\"\" selected>choose</option>\n                        <option>Starters</option>\n                        <option>Curries</option>\n                        <option>Rice</option>\n                    </Input>\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Label for=\"MinPrice\" className=\"mr-sm-2\">Minimum Price: </Label>\n                    <Input type=\"select\" \n                        name=\"MinPrice\" \n                        id=\"MinPrice\"\n                        onChange={ e => setMinPrice(e.target.value) }>\n                        <option value=\"\" selected>choose</option>\n                        <option value=\"0\">$0</option>\n                        <option value=\"5\">$5</option>\n                        <option value=\"10\">$10</option>\n                        <option value=\"15\">$15</option>\n                        <option value=\"20\">$20</option>\n                        <option value=\"20.01\">&gt;$20</option>\n                    </Input>\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Label for=\"MaxPrice\" className=\"mr-sm-2\">Maximum Price: </Label>\n                    <Input type=\"select\" \n                        name=\"MaxPrice\" \n                        id=\"MaxPrice\"\n                        onChange={ e => setMaxPrice(e.target.value) }>\n                        <option value=\"\" selected>choose</option>\n                        <option value=\"30\">$30</option>\n                        <option value=\"25\">$25</option>\n                        <option value=\"20\">$20</option>\n                        <option value=\"15\">$15</option>\n                        <option value=\"10\">$10</option>\n                        <option value=\"5\">$5</option>\n                        <option value=\"4.99\">&lt;$5</option>\n                    </Input>\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Label for=\"search\" className=\"mr-sm-2\">Search: </Label>\n                    <Input type=\"search\" \n                        name=\"search\" \n                        id=\"search\" \n                        placeholder=\"find....\" \n                        onChange={ e => setSearch(e.target.value) }/>\n                </FormGroup>\n                    <Button name=\"btn\" color=\"dark\">Search</Button>\n            </Form>\n            <MenuItem />\n            <MenuPagination move={move} />\n        </div>\n    )\n}\n\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table } from \"reactstrap\";\nimport { getOrders } from '../actions'\n\nexport default function MyOrders() {\n\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const token = useSelector(state => state.auth.token);\n    const user = useSelector(state => state.auth.user);\n    const data = useSelector(state => state.order.data);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getOrders(dispatch,token);\n    }, [])\n\n    return (\n        <div style={{marginTop : \"10px\"}}>\n            {isAuthenticated ?\n            user.isAdmin ?\n            <h4>This Page is for displaying Customer's Orders</h4>\n            :\n            data.map((item, index) => (\n                <div className=\"container\">\n                <h5>Order {index+1}:</h5>\n                <Table striped>\n                    <thead>\n                    <tr>\n                    <th>Item No</th>\n                    <th>Item Name</th>\n                    <th>quantity</th>\n                    <th>Price</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {item.items.map((value, loc) => (\n                            <tr>\n                            <th scope=\"row\">{loc}</th>\n                            <td>{value.name}</td>\n                            <td>{value.qty}</td>\n                            <td>{(value.price * value.qty).toFixed(2)}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                \n                    <p style={{\"fontWeight\" : \"bold\"}}>OrderType: {item.orderType}</p>\n                    <p style={{\"fontWeight\" : \"bold\"}}>Booking Time:\n                        {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'numeric', day: 'numeric',\n                                                        hour: 'numeric', minute: 'numeric', second: 'numeric',\n                                                        hour12: true}).format(new Date(item.bookingTime))}</p>\n                    <p style={{\"fontWeight\" : \"bold\"}}>Bill: {item.totalBill}</p>\n\n                </div>\n            ))\n            :\n            <h4>Please Login to See Your Orders</h4> }\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div id=\"About\" style={{marginBottom : \"5rem\", color : \"#d3af37\"}}>\n            <h4 style={{color : \"#996515\"}}>About Us</h4>\n            <p>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n            It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. \n            It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </p>\n        </div>\n    )\n}\n","import React from 'react';\n\n\nexport default function Contact() {\n    return (\n        <pre className=\"data\" id=\"Contact\" style={{backgroundColor : \"#99651b\", color : \"#FFDF00\", marginBottom : \"0rem\"}}>\n            <p style={{marginLeft : \"2.5rem\", marginRight : \"2.5rem\"}}>HOURS OF OPERATION                          Contact Us: </p>                \n            <p style={{marginLeft : \"2.5rem\"}}>Monday\t:\t11:30 AM - 10:00 PM             9999 N. Greenville Ave, Suite #999 , <br/>  \n                Tuesday\t:\t11:30 AM - 10:00 PM            Richardson, TX - 75081<br/> \n                Wednesday\t:\t11:30 AM - 10:00 PM          Phone:  (999) 999-9999<br/>  \n                Thursday\t:\t11:30 AM - 10:00 PM           Email: dummy.richardson@gmail.com<br/>  \n                Friday\t:\t11:30 AM - 10:30 PM    <br/>  \n                Saturday\t:\t11:30 AM - 10:30 PM   <br/>  \n                Sunday\t:\t11:30 AM - 09:30 PM    <br/>\n                </p> \n        </pre>    \n       \n        \n    )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AppNavbar from './components/AppNavbar';\nimport SlideDiv from './components/SlideDiv';\nimport Menu from './components/Menu';\nimport MyOrders from './components/MyOrders';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport { loadUser } from \"./actions\";\nimport {BrowserRouter as Router, Route}  from 'react-router-dom';\n\n  \nfunction App() {\n  \n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    loadUser(dispatch, token);  \n  }, []);\n\n  return (\n    <Router>\n     <div className=\"App\">\n     <Route exact path='/' render={ () => (\n       <React.Fragment>\n         <AppNavbar />\n         <SlideDiv />\n         <About />\n         <Contact />\n       </React.Fragment> \n     )} />\n         <Route path=\"/Menu\" render={ () => (\n           <React.Fragment>\n             <AppNavbar />\n             <Menu />\n             <Contact /> \n           </React.Fragment>\n         )} />\n         <Route path=\"/Orders\" render={ () => (\n           <React.Fragment>\n             <AppNavbar />\n             <MyOrders />\n             <Contact /> \n           </React.Fragment>\n         )} />       \n     </div>\n   </Router>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    token : localStorage.getItem('token'),\n    isAuthenticated : null,\n    user : null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case 'REGISTRATION_SUCCESS':\n        case 'LOGIN_SUCCESS':\n        case 'USER_LOADED':    \n            localStorage.setItem('token',action.payload.token)    \n            return {\n                token : action.payload.token,\n                isAuthenticated : true,\n                user : action.payload.user\n            };    \n        case 'LOGIN_FAILURE':\n        case 'LOGOUT_FAILURE':     \n        case 'REGISTRATION_FAILURE':\n        case 'AUTH_FAILURE':               \n        case 'LOGOUT_SUCCESS':      \n            localStorage.removeItem('token');\n            return {\n                token : null,\n                isAuthenticated : false,\n                user : null\n            };    \n        default:\n            return state;\n    }\n}\n\n","const initialState = {\n    msg : {},\n    status : null,\n    id : null\n}\n\nconst errorReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case 'SET_ERROR':\n            return {\n                msg : action.payload.msg,\n                status : action.payload.status,\n                id : action.payload.id\n            }\n        case 'CLEAR_ERROR':\n            return {\n                msg : {},\n                status : null,\n                id : null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default errorReducer;","const initialState = {\n   items : null, \n   added : null,\n   edited : null,\n   skip : null,\n   search : null\n}\n\n\nconst productReducer = (state=initialState, action) => {\n\n    let result;\n    if(action.type === 'ITEM_EDITED') {\n        result = state.items.result.map(item => {\n            if(item._id === action.payload.id) {\n                return {\n                    _id : item._id,\n                    ...action.payload.details\n                }\n            } \n            return item;\n        })\n    }\n    \n    if(action.type === 'ITEM_DELETED') { result =  state.items.result.filter(item => item._id !== action.payload); }\n    \n    switch(action.type) {\n        case 'GET_ITEMS':\n            return {\n                added : null,\n                edited : null,\n                skip : state.skip,\n                search : state.search,\n                items : action.payload \n            }\n        case 'ITEM_DELETED':\n            return {\n                added : state.added,\n                edited : state.edited,\n                skip : state.skip,\n                search : state.search,\n                items : {\n                    length : state.items.length,\n                    result : result\n                }\n            }    \n        case 'ITEM_EDITED':\n            return {\n                added : state.added,\n                edited : true,\n                skip : state.skip,\n                search : state.search,\n                items : {\n                    length : state.items.length,\n                    result : result\n                }\n            }    \n        case 'ITEM_ADDED':\n            return {\n                added : true,\n                edited : state.edited,\n                skip : state.skip,\n                search : state.search,\n                items : state.items\n            }\n        case 'RESET': \n            return {\n                added : null,\n                edited : null,\n                skip : state.skip,\n                search : state.search,\n                items : state.items   \n            }\n        case 'SET_SEARCH_FIELDS': \n            return {\n                skip : action.payload.skip,\n                items : state.items,\n                added : state.added,\n                edited : state.edited,\n                search : {\n                    category : action.payload.category,\n                    minPrice : action.payload.minPrice,\n                    maxPrice : action.payload.maxPrice,\n                    searchTerm : action.payload.searchTerm\n                }\n            }    \n        default:\n            return {\n                ...state\n            }\n    }\n}\n\n\nexport default productReducer;","const initialState = {\n    items : [],\n    total : 0,\n    placed : false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case 'ADD_TO_CART':\n            return {\n                items : action.payload.items,\n                total : action.payload.total,\n                placed : false\n            }\n        case 'ORDER_PLACED':\n            return {\n                items : [],\n                total : 0,\n                placed : true\n            }\n        case 'ORDER_RESET':\n            return {\n                items : [],\n                total : 0,\n                placed : false\n            }\n        default:\n            return state;\n    }\n}","const initialState = {\n    data : null\n}\n\nexport default function(state=initialState, action) {\n    switch(action.type) {\n        case 'GET_ORDERS':\n            return {\n                data : action.payload\n            }\n        default : \n            return state;\n    }\n}","import authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport productReducer from \"./productReducer\";\nimport cartReducer from \"./cartReducer\";\nimport orderReducer, { order } from \"./orderReducer\";\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n    auth : authReducer,\n    error : errorReducer,\n    product : productReducer,\n    cart : cartReducer,\n    order : orderReducer\n});\n\nexport default allReducers;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; \nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport allReducers from \"./reducers\";\n\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, allReducers);\n\nconst store = createStore(persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconst persistor = persistStore(store)\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <PersistGate loading={null} persistor={persistor}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </PersistGate>  \n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}