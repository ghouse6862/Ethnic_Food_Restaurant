{"version":3,"sources":["components/Slides/Slide1.jpeg","components/Slides/Slide2.jpg","components/Slides/Slide3.jpg","actions/index.js","components/LogIn.js","components/SignUp.js","components/ProductForm.js","components/MyCart.js","components/AppNavbar.js","components/SlideDiv.js","components/About.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setError","dispatch","msg","status","id","type","payload","getProducts","category","minPrice","maxPrice","searchTerm","skip","query","axios","get","then","res","data","catch","err","response","message","getOrders","token","headers","getConfig","header","contentType","config","LogIn","error","useSelector","state","isAuthenticated","auth","useDispatch","useState","isOpen","setIsOpen","toggle","setMsg","email","setEmail","password","setPassword","useEffect","onSubmit","e","preventDefault","trim","post","signInUser","NavLink","onClick","href","Modal","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","name","placeholder","onChange","target","value","Button","block","style","marginTop","SignUp","setName","phnno","setPhnno","match","length","signUpUser","ProductForm","added","product","search","price","setPrice","qty","setQty","setCategory","description","setDescription","image","setImage","parseFloat","productName","file","fd","FormData","append","addProduct","selected","accept","files","required","FormText","MyCart","cart","user","orderType","document","getElementsByName","i","checked","placeOrder","placed","items","Fragment","Table","striped","map","index","scope","toFixed","incStyle","_id","total","decStyle","filter","tag","check","backgroundColor","border","padding","cursor","marginRight","AppNavbar","order","localStorage","getItem","redirect","setRedirect","a","to","Navbar","light","expand","NavbarBrand","src","NavbarToggler","Collapse","navbar","Nav","className","NavItem","isAdmin","logoutUser","slide1","slide2","slide3","About","marginBottom","Contact","marginLeft","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f7f9d0c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Slide1.3148ef7c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Slide2.412cbf82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Slide3.2f4c64a4.jpg\";","import axios from 'axios';\n\n\nexport const limit = 4;\n\nexport const setError = (dispatch, msg, status, id) => {\n    dispatch({\n        type : 'SET_ERROR',\n        payload : {\n            msg,\n            status,\n            id\n        }\n    });\n}\n\nexport const signUpUser = (dispatch, name, email, phnno, password) => {\n\n    axios.post('/user/register',{name, email, phnno, password})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type: 'REGISTRATION_SUCCESS',\n                payload: { ...res.data,\n                    token : res.headers['auth-token']\n                }\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'REGISTRATION_FAILURE');\n            dispatch({\n                type: 'REGISTRATION_FAILURE'\n            });\n        })\n}\n\nexport const signInUser = (dispatch, email, password) => {\n\n    axios.post('/user/login',{email, password})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type: 'LOGIN_SUCCESS',\n                payload: { ...res.data,\n                    token : res.headers['auth-token']\n                }\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'LOGIN_FAILURE');\n            dispatch({\n                type: 'LOGIN_FAILURE'\n            });\n        })\n}\n\nexport const logoutUser = (dispatch, id, token) => {\n\n    const headers = getConfig(token).header;\n\n    axios.post('/user/logout', {id}, { headers : headers })\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'LOGOUT_SUCCESS'\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'LOGOUT_FAILURE');\n            dispatch({\n                type : 'LOGOUT_FAILURE'\n            });\n        })\n}\n\nexport const loadUser = (dispatch, token) => {\n\n    const headers = getConfig(token).header;\n\n    axios.get('/user', {headers : headers})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'USER_LOADED',\n                payload : {\n                    ...res.data,\n                    token : token\n                }\n            });\n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'AUTH_FAILURE');\n            dispatch({\n                type : 'AUTH_FAILURE'\n            });\n\n        })\n}\n\nexport const addProduct = (dispatch, token, productName, description, price, qty, category, file) => {\n\n    let fd = new FormData();\n    fd.append('productName', productName);\n    fd.append('description', description);\n    fd.append('price', price);\n    fd.append('qty', qty);\n    fd.append('category', category);\n    fd.append('images', file, file.name);\n\n    axios.post('/products/add', fd, {headers : getConfig(token,'multipart/form-data').header})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'ITEM_ADDED'\n            });\n        })\n        .catch(err => {\n            \n            setError(dispatch, err.response.data.message, err.response.status, 'ITEM_ADD_FAILURE');\n        })\n}\n\nexport const editProduct = (dispatch, token, productName, description, price, qty, category, file, id) => {\n\n    let fd = new FormData();\n        fd.append('productName', productName);\n        fd.append('description', description);\n        fd.append('price', price);\n        fd.append('qty', qty);\n        fd.append('category', category);\n\n    if(file) {\n        fd.append('images', file, file.name); \n    }\n\n    axios.put(`/products/${id}`, fd, {headers : getConfig(token,'multipart/form-data').header})\n        .then(res => {\n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n            dispatch({\n                type : 'ITEM_EDITED',\n                payload : {id, details : {productName, description, price, qty, category}}\n            });\n        })\n        .catch(err => {\n            \n            setError(dispatch, err.response.data.message, err.response.status, 'ITEM_EDIT_FAILURE');\n        })\n\n}\n\nexport const deleteProduct = (dispatch, id, token) => {\n    \n    axios.delete(`/products/${id}`, {headers: getConfig(token).header})\n        .then(res => {\n            \n            dispatch({\n                type : 'CLEAR_ERROR'\n            });\n\n            dispatch({\n                type : 'ITEM_DELETED',\n                payload : id\n            })\n        })\n        .catch(err => {\n\n            setError(dispatch, err.response.data.message, err.response.status, 'ITEM_DELETE_FAILURE');\n        })\n}\n\nexport const getProducts = (dispatch, category, minPrice, maxPrice, searchTerm, skip=0) => {\n    let query = '/products/?category=';\n\n    if(category) {\n        query += category;\n    }\n    query += '&minprice='\n    if(minPrice) {\n        query += minPrice;\n    }\n    query += '&maxprice='\n    if(maxPrice) {\n        query += maxPrice;\n    }\n    query += '&searchTerm='\n    if(searchTerm) {\n        query += searchTerm;\n    }\n    query += '&limit='+limit+'&skip='+skip;\n    //request for data\n    axios.get(query)\n        .then(res => { dispatch({\n            type : 'GET_ITEMS',\n            payload : res.data\n            });\n            dispatch({\n                type: 'SET_SEARCH_FIELDS',\n                payload: {category, minPrice, maxPrice, searchTerm, skip}\n            }); \n        })\n        .catch(err => setError(dispatch, err.response.data.message, err.response.status, 'ITEMS_FETCH_FAILURE'))\n}\n\nexport const placeOrder = (dispatch, cart, user, orderType, token) => {\n\n    axios.post('/orders/add', {cart, user, orderType}, {headers: getConfig(token).header})\n        .then(res => {\n                \n        dispatch({\n            type : 'CLEAR_ERROR'\n        })\n\n        dispatch({\n            type : 'ORDER_PLACED' \n        })\n\n        })\n        .catch(err => setError(dispatch, err.response.data.message, err.response.status, 'ORDER_FAILURE'))\n}\n\nexport const getOrders = (dispatch, token) => {\n   \n    axios.get('/orders', {headers: getConfig(token).header})\n        .then(res => {\n            \n            dispatch({\n                type : 'CLEAR_ERROR'\n            })\n\n            dispatch({\n                type : 'GET_ORDERS',\n                payload : res.data\n            })\n            \n        })\n        .catch(err => {\n            setError(dispatch, err.response.data.message, err.response.status, 'ORDER_FAILURE');\n        })\n}\n\nexport const getConfig = (token, contentType='application/json') => {\n    const config = {\n        header : {\n            'Content-Type' : contentType\n        }\n    }\n    if(token) {\n        config.header['auth-token'] = token;\n    }\n    return config;\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n } from 'reactstrap';\n import { signInUser, setError } from '../actions';\n\nexport default function LogIn() {\n\n    const error = useSelector(state => state.error);\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => { \n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setIsOpen(!isOpen);\n    }\n\n    const [msg, setMsg] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect( () => {\n        if(error.id === 'LOGIN_FAILURE') {\n            setMsg(error.msg);\n        }\n        if(isAuthenticated) {\n            if(isOpen) {\n                toggle();\n            }\n        }\n    }, [error, isAuthenticated] )\n\n    const onSubmit = e => { \n        e.preventDefault();\n        //perform validation\n        if(!email.trim() || !password.trim()) {\n\n            setError(dispatch, \"All fields are required\", 400, 'LOGIN_FAILURE');\n        } else {\n            signInUser(dispatch, email, password);\n        } \n    }    \n\n    return (\n        <div>\n            <NavLink onClick={toggle} href=\"#\">SignIn</NavLink>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>SignIn: </ModalHeader>\n                <ModalBody>\n                    {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    <Form onSubmit = { e => onSubmit(e) }>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input name=\"email\"\n                                id=\"email\"\n                                type=\"email\"\n                                placeholder=\"enter email id\"\n                                onChange={ e => setEmail(e.target.value) } \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input name=\"password\"\n                                id=\"password\"\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                onChange={ e => setPassword(e.target.value) } \n                            />\n                        </FormGroup>\n                        <Button\n                            color=\"dark\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >SignIn</Button>\n                        </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n } from 'reactstrap';\nimport { signUpUser, setError } from '../actions';\n\n\nexport default function SignUp() {\n\n    const error = useSelector(state => state.error);\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => {\n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setIsOpen(!isOpen);\n    };\n\n    const [msg, setMsg] = useState(null);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phnno, setPhnno] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect( () => {\n        if(error.id === 'REGISTRATION_FAILURE') {\n            setMsg(error.msg);\n        }\n        if(isAuthenticated) {\n            if(isOpen) {\n                toggle();\n            }\n        }\n    }, [error, isAuthenticated] )\n\n    const onSubmit = e => { \n        e.preventDefault();\n        //perform validation\n        if(!name.trim() || !email.trim() || !phnno.trim() || !password.trim()) {\n\n            setError(dispatch, \"All fields are required\", 400, 'REGISTRATION_FAILURE');\n        } \n        //check if password meets all requirements\n        else if(!password.trim().match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)) {\n\n            const message = \"Password should be minimum of 8 characters & should include atleast 1 lowercase, 1 uppercase, 1 digit & 1 special character\";\n            setError(dispatch, message, 400, 'REGISTRATION_FAILURE');\n        }\n        //check if phone number meets all requirements \n        else if(!phnno.trim().match(/^[0-9]*$/) || !(phnno.trim().length === 10)) {\n\n            setError(dispatch ,\"please enter a valid phone number\", 400, 'REGISTRATION_FAILURE');\n        }\n        //check if name meets all requirements \n        else if(!name.trim().match(/^[a-zA-Z\\s]*$/)) {\n\n            setError(dispatch, \"Name should contain only letters\", 400, 'REGISTRATION_FAILURE');\n        }\n        else if(name.trim().length < 3) {\n\n            setError(dispatch, \"Name should contain atleast 3 characters\", 400, 'REGISTRATION_FAILURE');\n        }\n        //if all fields are valid\n        else {\n            signUpUser(dispatch, name.trim(), email.trim(), phnno.trim(), password.trim());\n        }\n    }\n\n    return (\n        <div>\n            <NavLink onClick={toggle} href=\"#\">SignUp</NavLink>\n            <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>SignUp: </ModalHeader>\n                <ModalBody>\n                    {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    <Form onSubmit = { e => onSubmit(e) }>\n                        <FormGroup>\n                            <Label for=\"name\">Name:</Label>\n                            <Input name=\"name\"\n                                id=\"name\"\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                onChange={ e => setName(e.target.value) } \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input name=\"email\"\n                                id=\"email\"\n                                type=\"email\"\n                                placeholder=\"enter your email id\"\n                                onChange={ e => setEmail(e.target.value) }  \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"phnno\">Phone Number:</Label>\n                            <Input name=\"phnno\"\n                                id=\"phnno\"\n                                type=\"text\"\n                                placeholder=\"enter your phone number\"\n                                onChange={ e => setPhnno(e.target.value) }  \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input name=\"password\"\n                                id=\"password\"\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                onChange={ e => setPassword(e.target.value) }  \n                            />\n                        </FormGroup>\n                        <Button\n                            color=\"dark\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >SignUp</Button>\n                        </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\n\n//export default connect(null, toggle)(MyComponent);","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert, Modal,\n    ModalHeader,\n    ModalBody,\n    NavLink } from 'reactstrap';\nimport { addProduct, setError, getProducts } from '../actions';\n\n\nexport default function ProductForm() {\n\n    const error = useSelector(state => state.error);\n    const token = useSelector(state => state.auth.token);\n    const added = useSelector(state => state.product.added);\n    const skip = useSelector(state => state.product.skip);\n    const search = useSelector(state => state.product.search);\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const toggle = () => { \n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setIsOpen(!isOpen);\n    }\n\n    const [msg, setMsg] = useState(null);\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(null);\n    const [qty, setQty] = useState(null);\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState(null);\n\n    useEffect( () => {\n        if(error.id === 'ITEM_ADD_FAILURE') {\n            setMsg(error.msg);\n        }\n        \n        if(error.status === null && added) {\n            if(isOpen) {\n                toggle();\n                dispatch({\n                    type : 'RESET'\n                })\n                if(search) {\n                    getProducts(dispatch, search.category, search.minPrice, search.maxPrice, search.searchTerm, skip);\n                }\n            }\n        }\n    }, [error, added] )\n\n    const onSubmit = e => {\n\n        e.preventDefault();\n\n        if(!name.trim() || !description.trim() || !price.trim() || !category.trim() || !image || !qty.trim()) {\n            setError(dispatch, \"All fields are required\", 400, 'ITEM_ADD_FAILURE');\n\n        }\n        else if(name.trim().length < 3) {\n            setError(dispatch, \"Name should contain atleast 3 characters!\", 400, 'ITEM_ADD_FAILURE');\n\n        }\n        else if(parseFloat(price) < 0) {\n            setError(dispatch, \"Price should be a positive Number\", 400, 'ITEM_ADD_FAILURE');\n            \n        }\n        else if(parseFloat(qty) < 0) {\n            setError(dispatch, \"Quantity Available cannot be negative\", 400, 'ITEM_ADD_FAILURE');\n        }\n        else if(description.trim().length < 10) {\n            setError(dispatch, \"Description should contain atleast 10 characters\", 400, 'ITEM_ADD_FAILURE');\n            \n        } \n        else if(description.trim().length > 150) {\n            setError(dispatch, \"Description can contain atmost 150 characters\", 400, 'ITEM_ADD_FAILURE');\n            \n        } else {\n            addProduct(dispatch, token, name.trim(), description.trim(), parseFloat(price), parseFloat(qty), category.trim(), image);\n        }\n    }\n\n    return (\n        <div>\n           <NavLink onClick={toggle} href=\"#\">Add Product</NavLink> \n           <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Enter Details of the Item to Add: </ModalHeader>\n                <ModalBody>\n                { msg ? <Alert color=\"danger\">{msg}</Alert> : null }\n           <Form onSubmit = { e => onSubmit(e) }>\n                <FormGroup>\n                    <Label for=\"productName\">Name: </Label>\n                    <Input type=\"text\" \n                        name=\"productName\" \n                        id=\"productName\" \n                        placeholder=\"Enter the name of the item\"\n                        onChange={ e => setName(e.target.value) } \n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"price\">Price: </Label>\n                    <Input type=\"text\" \n                        name=\"price\" \n                        id=\"price\" \n                        placeholder=\"Enter price for the item\" \n                        onChange={ e => setPrice(e.target.value) }\n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"qty\">Quantity Available: </Label>\n                    <Input type=\"text\" \n                        name=\"qty\" \n                        id=\"qty\" \n                        placeholder=\"Enter quantity of item available\" \n                        onChange={ e => setQty(e.target.value) }\n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"Category\">Category: </Label>\n                    <Input type=\"select\" name=\"Category\" id=\"Category\" onChange={ e => setCategory(e.target.value) }>\n                        <option value=\"\" selected>choose</option>\n                        <option value=\"starters\">starters</option>\n                        <option value=\"curries\">curries</option>\n                        <option value=\"rice\">rice</option>\n                    </Input>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"decription\">Item Description: </Label>\n                    <Input type=\"textarea\" \n                        name=\"description\" \n                        id=\"description\" \n                        placeholder=\"text\"\n                        onChange={ e => setDescription(e.target.value) }\n                        />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"image\">Item Image: </Label>\n                    <Input type=\"file\" \n                        name=\"image\" \n                        id=\"image\"\n                        accept=\"image/png, image/jpeg, image/jpg\" \n                        onChange={ e => setImage(e.target.files[0])} required/>\n                    <FormText color=\"danger\">\n                    Upload only .png, .jpeg or .jpg file types.\n                    </FormText>\n                </FormGroup>\n                <Button color=\"dark\">Submit</Button>\n            </Form>\n            </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink, Button, Form, FormGroup, Label, Input,\n    Modal, ModalHeader, ModalBody, Alert,\n    Table } from \"reactstrap\";\nimport { placeOrder, setError } from \"../actions\";\n\nexport default function MyCart() {\n\n    const cart = useSelector(state => state.cart);\n    const user = useSelector(state => state.auth.user);\n    const token = useSelector(state => state.auth.token);\n    const error = useSelector(state => state.error);\n    const dispatch = useDispatch();\n\n    const [msg, setMsg] = useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => { \n        dispatch({\n            type : 'CLEAR_ERROR'\n        });\n        setMsg(null);\n        setIsOpen(!isOpen);\n    }\n\n    const onClick = () => {\n\n        let type = document.getElementsByName('radio');\n        let orderType;\n\n        for(let i = 0; i < type.length; i++) {\n            if(type[i].checked) {\n                orderType = type[i].value;\n            }\n        }\n\n        if(!orderType) {\n            setError(dispatch, 'OrderType is Required',400,'ORDER_FAILURE');\n        } else {\n            placeOrder(dispatch, cart, user, orderType, token);\n        }\n    }\n\n    const emptyCart = () => {\n        dispatch({\n            type : 'ORDER_RESET'\n        })\n    }\n\n    const increaseQty = (id) => {\n        \n        cart.items = cart.items.map(product => {\n            if(product._id === id) {\n                product.qty += 1;\n                cart.total = (parseFloat(cart.total)+parseFloat(product.price)).toFixed(2);                \n            }\n            return product;\n        })\n\n        dispatch({\n            type : 'ADD_TO_CART',\n            payload : {\n                items : cart.items,\n                total : cart.total,\n            }\n        })\n    }\n\n    const decreaseQty = (id) => {\n\n        cart.items = cart.items.map(product => {\n            if(product._id === id) {\n                product.qty -= 1;\n                cart.total = (parseFloat(cart.total)-parseFloat(product.price)).toFixed(2);\n            }\n            return product;\n        })\n\n        cart.items = cart.items.filter(product => product.qty !== 0);\n\n        dispatch({\n            type : 'ADD_TO_CART',\n            payload : {\n                items : cart.items,\n                total : cart.total,\n            }\n        })\n    }\n\n    useEffect(() => {\n        if(error.id === 'ORDER_FAILURE') {\n            setMsg(error.msg);\n        }\n        if(error.status == null && cart.placed) {\n            dispatch({\n                type : 'ORDER_RESET'\n            })\n            setMsg(\"Success! Your Order has been placed & will be ready in 1 hour.\");\n        }\n    }, [error, cart])\n\n    return (\n        <div>\n           <NavLink onClick={toggle} href=\"#\">My Cart</NavLink> \n           <Modal isOpen={isOpen} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Your Cart: </ModalHeader>\n                <ModalBody>\n\n                    {msg && error.id === 'ORDER_FAILURE' ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    {msg && error.status == null ? <Alert color=\"success\">{msg}</Alert> : null}\n\n                    {cart.items.length > 0 ?\n                    <React.Fragment>\n                    <Table striped>\n                        <thead>\n                            <tr>\n                            <th>Item No</th>\n                            <th>Item Name</th>\n                            <th>quantity</th>\n                            <th>Price</th>\n                            <th>Update Qty</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {cart.items.map((product, index) => (\n                            <tr>\n                                <th scope=\"row\">{index}</th>\n                                <td>{product.productName}</td>\n                                <td>{product.qty}</td>\n                                <td>{(product.price * product.qty).toFixed(2)}</td>\n                                <td><button style={incStyle} onClick = {() => increaseQty(product._id)}>+</button>\n                                    <button style={decStyle} onClick = {() => decreaseQty(product._id)}>-</button></td>\n                            </tr>\n                        ))\n                    }\n                    <tr>\n                        <th scope=\"row\"></th>\n                        <td></td>\n                        <th>Total</th>\n                        <td>{cart.total}</td>\n                    </tr>\n                    </tbody>\n                    </Table>\n                        <Form>\n                            <FormGroup tag=\"fieldset\">\n                            <legend>Order Type: </legend>\n                            <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio\" value=\"dinein\"/>{' '}\n                                Dine-in\n                            </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio\" value=\"pickup\"/>{' '}\n                                Pick-up\n                            </Label>\n                            </FormGroup>\n                            </FormGroup>\n                        </Form>\n                        <Button\n                            onClick = {() => onClick()}\n                            color=\"success\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >Place Order</Button>\n                        <Button\n                            onClick = {() => emptyCart()}\n                            color=\"danger\"\n                            block\n                            style={{marginTop : \"0.5rem\"}}\n                            >Empty Cart</Button>    \n                    </React.Fragment>\n                    :\n                    <h4>Nothing to show!</h4>}\n                </ModalBody>\n           </Modal>\n        </div>\n    )\n}\n\nconst incStyle = {\n    color : 'white',\n    backgroundColor : '#4fa846',\n    border : 'none',\n    padding: '4px 7px',\n    cursor : 'pointer',\n    marginRight : '5px'\n}\n\nconst decStyle = {\n    color : 'white',\n    backgroundColor : '#dc4245',\n    border : 'none',\n    padding: '4px 7px',\n    cursor : 'pointer'\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport LogIn from './LogIn';\nimport SignUp from './SignUp';\nimport ProductForm from './ProductForm';\nimport MyCart from \"./MyCart\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\nimport { logoutUser, getOrders } from '../actions';\n\n\nconst AppNavbar = () => { //(props) was removed\n\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n    const user = useSelector(state => state.auth.user);\n    const order = useSelector(state => state.order);\n    //const token = useSelector(state => state.auth.token);\n    const token = localStorage.getItem('token');\n\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    const onClick = async () => {\n\n        getOrders(dispatch, token);\n        setRedirect(true);\n        \n    }\n    \n    return (\n        <div>\n            {redirect ? <Redirect to='/Orders'></Redirect> : null} \n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/\"><img src=\"TajLogo.png\"></img></NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <NavLink href=\"/\">Home</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"#About\">About</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/Menu\">Menu</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"#Contact\">Contact</NavLink>\n                    </NavItem>\n                </Nav>\n            { ((token && isAuthenticated === null) || (isAuthenticated)) ?\n            <Nav navbar>\n        \n            {user ? user.isAdmin ? \n            <NavItem>\n            <ProductForm />\n            </NavItem> \n            :\n            <React.Fragment>\n            <NavItem>\n            <MyCart /> \n            </NavItem>\n            <NavItem>\n                <NavLink onClick = {() => onClick()} href=\"#\">My Orders</NavLink>\n            </NavItem>\n            </React.Fragment>  \n            : \n            null\n            }    \n            <NavItem>\n                <NavLink onClick = {() => logoutUser(dispatch, user._id, token)} href=\"#\">LogOut</NavLink>\n            </NavItem>\n            </Nav>     \n            :\n            <Nav navbar>\n                <NavItem>\n                    <SignUp />\n                </NavItem>\n                <NavItem>\n                    <LogIn />\n                </NavItem>\n            </Nav> }\n        </Collapse>\n      </Navbar>\n    </div>\n    )\n}\n\nexport default AppNavbar;\n\n","import React, { useState } from 'react'\nimport {\n    Carousel,\n    CarouselItem,\n    CarouselControl,\n    CarouselIndicators,\n    CarouselCaption\n  } from 'reactstrap';\nimport slide1 from './Slides/Slide1.jpeg';\nimport slide2 from './Slides/Slide2.jpg';  \nimport slide3 from './Slides/Slide3.jpg';    \n\nconst items = [\n    {\n        src: slide1,  \n        altText: 'Slide 1',\n        caption: 'Slide 1'\n    },\n    {\n        src: slide2, \n        altText: 'Slide 2',\n        caption: 'Slide 2'\n    },\n    {\n        src: slide3, \n        altText: 'Slide 3',\n        caption: 'Slide 3'\n    }\n];\n\nexport default function SlideDiv() {\n\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n      className=\"mb-5\"\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div id=\"About\" style={{marginBottom : \"5rem\", color : \"#d3af37\"}}>\n            <h4 style={{color : \"#996515\"}}>About Us</h4>\n            <p>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n            It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. \n            It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </p>\n        </div>\n    )\n}\n","import React from 'react';\n\n\nexport default function Contact() {\n    return (\n        <pre className=\"data\" id=\"Contact\" style={{backgroundColor : \"#99651b\", color : \"#FFDF00\", marginBottom : \"0rem\"}}>\n            <p style={{marginLeft : \"2.5rem\", marginRight : \"2.5rem\"}}>HOURS OF OPERATION                          Contact Us: </p>                \n            <p style={{marginLeft : \"2.5rem\"}}>Monday\t:\t11:30 AM - 10:00 PM             9999 N. Greenville Ave, Suite #999 , <br/>  \n                Tuesday\t:\t11:30 AM - 10:00 PM            Richardson, TX - 75081<br/> \n                Wednesday\t:\t11:30 AM - 10:00 PM          Phone:  (999) 999-9999<br/>  \n                Thursday\t:\t11:30 AM - 10:00 PM           Email: dummy.richardson@gmail.com<br/>  \n                Friday\t:\t11:30 AM - 10:30 PM    <br/>  \n                Saturday\t:\t11:30 AM - 10:30 PM   <br/>  \n                Sunday\t:\t11:30 AM - 09:30 PM    <br/>\n                </p> \n        </pre>    \n       \n        \n    )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppNavbar from './components/AppNavbar';\nimport SlideDiv from './components/SlideDiv';\nimport Menu from './components/Menu';\nimport MyOrders from './components/MyOrders';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport './App.css';\nimport {BrowserRouter as Router, Route}  from 'react-router-dom';\n\n  \nfunction App() {\n  \n  return (\n    <div>\n      <AppNavbar />\n      <About />\n      <Contact />\n    </div>\n\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}